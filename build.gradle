plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// SDK Admin de Firebase
	implementation 'com.google.firebase:firebase-admin:9.2.0'

	// JWT (si necesitás verificar tokens manualmente)
	implementation 'com.auth0:java-jwt:4.4.0'

	// Para trabajar con JSON (Firebase usa JSON en su config)
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'

	// Seguridad en Spring Boot (si querés proteger endpoints con tokens Firebase)
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Dependencia opcional para autenticación con OAuth2 (Google Sign-In)
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
}

tasks.named('test') {
	useJUnitPlatform()
}
